["function _5e175b50c23e5e52dd190801068f1f9479ac8c62(){};",20989,36,91,398064," Ext.mixin.Identifiable \n    ",1480607,44,"\n",503015,37,398266,118086," Ext.mixin.Mixin ,\n\n    mixins: [ Ext.mixin.Identifiable ]",567710,35,516445,28405," Ext.mixin.Observable ]",1161949,34,181744,93,545000,3170," Ext.Evented ",1162430,88,548271,6692," Ext.mixin.Observable ",554985,12708," Ext.mixin.Mixin ",567710,96830," Ext.XTemplateParser ",664561,24174," Ext.Template ",1562688,41,306624,38,688828,4895," Ext.fx.easing.Abstract ",693747,897," Ext.Evented ",1562688,42,694699,5737," Ext.util.translatable.Abstract ,",2049016,37,807582,55,709168,116,700677,157," Ext.util.translatable.Dom ",703615,49,700910,480," Ext.util.translatable.Dom ",701417,2171," Ext.util.translatable.Dom ",703615,1318," Ext.behavior.Behavior ",1480608,57,1007610,48,705865,32,715917,82,705175,1175," Ext.mixin.Observable \n    ",1480607,58,706435,9331," Ext.behavior.Behavior ",863520,60,1007616,42,715891,9758," Ext.AbstractComponent ,",1068143,35,"Component',\n\n    mixins: [ Ext.mixin.Traversable ",1480607,76,"\n",860229,62,1641360,34,725930,73575," Ext.mixin.Observable ",799527,588," Ext.mixin.Mixin ",567710,35,800167,2078," Ext.mixin.Bindable ",802265,7638," Ext.layout.Abstract ",809924,12341," Ext.layout.Default ",822285,2240," Ext.Evented ",824538,7604," Ext.Evented ",832155,4190," Ext.fx.animation.Abstract ",1017370,32,836404,4345," Ext.fx.animation.Slide ",840773,168," Ext.fx.animation.Abstract ",1017370,32,841000,800," Ext.fx.animation.Fade ",841823,186," Ext.fx.animation.Abstract ",842036,2149," Ext.fx.animation.Abstract ",844212,1159," Ext.fx.animation.Pop ",845393,2076," Ext.fx.layout.card.Abstract ",2215072,58,852048,45,847601,3081," Ext.fx.layout.card.Style ",850708,494," Ext.fx.layout.card.Style ",851228,750," Ext.fx.layout.card.Style ",852004,725," Ext.fx.layout.card.Style ",852755,372," Ext.fx.layout.card.Style ",853153,1442," Ext.fx.layout.card.Style ",854621,692," Ext.fx.layout.card.Abstract ",1480608,49,855391,7685," Ext.layout.Default ",863096,2785," Ext.layout.Default ",865901,2399," Ext.layout.Box ",868316,5680," Ext.layout.Default ",874016,2874," Ext.layout.FlexBox ",876910,2281," Ext.layout.FlexBox ",879211,11358," Ext.mixin.Observable ",890591,32898," Ext.mixin.Mixin ,",1411279,36,923543,8450," ",890462,32," ",932027,34," Ext.util.Sortable ",932080,4997," Ext.util.MixedCollection ",937103,236," Ext.fx.easing.Abstract ",937363,1036," Ext.fx.easing.Abstract ",938423,797," Ext.fx.easing.Abstract ",1838144,52,939296,3307," Ext.fx.easing.Linear ",942625,2446," Ext.Evented ",1838144,57,142384,33,142384,32,945206,43848," Ext.Component ",863520,42,989111,4007," Ext.scroll.indicator.Abstract ",993149,140," Ext.scroll.indicator.Abstract ",993320,1635," Ext.scroll.indicator.Abstract ",994986,3402," Ext.Evented ",1017370,32,998433,8843," Ext.behavior.Behavior ",863520,44,1007343,4492," Ext.Component ",1011850,5505," Ext.Component ,",1068143,35,1017406,31170,1048576,19511," Ext.Container ",1791808,38,1068140,12691," Ext.Component ",1080846,13145," Ext.Panel ",1094002,6286," Ext.mixin.Observable ",1161943,32,1100342,38202," Ext.data.Connection ,",1529432,48,1138614,23117," Ext.Component ",1161746,4162," Ext.Mask ",1165918,3139,"Menu}'s are used with {@link Ext.Viewport#setMenu}. A menu can be linked with any side of the screen (top, left, bottom or right)\n *  and will simply describe the contents of your menu. To use this menu you will call various menu related functions on the {@link Ext.Viewport}\n * such as {@link Ext.Viewport#showMenu}, {@link Ext.Viewport#hideMenu}, {@link Ext.Viewport#toggleMenu}, {@link Ext.Viewport#hideOtherMenus},\n * or {@link Ext.Viewport#hideAllMenus}.\n *\n *      @example preview\n *      var menu = Ext.create('Ext.Menu', {\n *",1080255,35,"{\n *                  text: 'Settings',\n *                  iconCls: 'settings'\n *",2162671,33,"{\n *                  text: 'New Item',\n *                  iconCls: 'compose'\n *",2162671,33,"{\n *                  text: 'Star',\n *                  iconCls: 'star'\n *",1067855,57,"Viewport.setMenu(menu, {\n *          side: 'left',\n *          reveal: true\n *      });\n *\n *      Ext.Viewport.showMenu('left",1258398,38,"a Menu item is a",1258448,48,"Menu', {\n    extend:  Ext.Sheet ,\n    xtype: 'menu",1167360,32,1169248,96,"Ext.baseCSSPrefix + 'menu'",836992,74,1012302,50,2130927,134,1233360,63,"eight",1302399,38,1230448,44,"width",1302399,38,1866496,45,1259520,47,"hide",1233216,36,"null,\n\n        /**",1012415,38,"hide",740270,42,2130762,67,"hide",1094251,59,"hide\n         */",989261,32,"/**",1012415,38,"hideOnMaskTap",1235312,33,"hide",738890,35,2344272,33,"null",2344319,62,"config.translatable",1921237,84,1007488,48,1260431,36,"Windows']",1235670,54,"context'",1170542,32,"pack: 'center'\n        }\n    }]",756048,50,1052159,37,"if (newUi != oldUi && ",2147597,39,"if (newUi == 'context'",1894347,38,"swapCls('x-vertical', 'x-horizontal'",1372176,38,"newUi == 'application'",1894347,38,"swapCls('x-horizontal', 'x-vertical",1880703,40,1029906,151,331248,33,"Viewport.hideMenu(this.$side",1051455,39,"},\n\n    /**\n     * Only fire the hide event if it is initialized",2261580,35,") {",1046223,50,2307599,33,"    }",1169033,179," Ext.Component ",1169227,3640," Ext.Component ",1172882,3865," Ext.Container ",1176762,4158," Ext.Component ",1180935,24879," Ext.Decorator ",1217420,36,1205865,11514," Ext.field.Field ",1217396,10876," Ext.field.Input ",1228289,1983," Ext.field.Text ",1230288,2352," Ext.Sheet ",2114720,40,"\n",1714134,87,939327,50,1230448,49,2303023,35,2128928,74,1232987,25534," Ext.Container ",1258536,21636," Ext.mixin.Observable ",1473919,52,1280246,15274," Ext.mixin.Observable ]",2105835,45,1295588,5945," Ext.mixin.Observable ",1473919,52,1301607,24084," Ext.app.Controller ",2215072,52,845899,46,"\n",939303,76,1325886,27856," Ext.mixin.Mixin ",863520,44,1365662,41,"sort",1365709,64,1353912,11689," Ext.mixin.Mixin ",863520,44,1365662,9343," Ext.mixin.Sortable ,\n        filterable:  Ext.mixin.Filterable ",517712,35,1375104,53618," Ext.mixin.Observable ",1428744,27305," Ext.data.reader.Reader ",1810367,36,1456109,12757," Ext.data.writer.Writer ",1810367,36,1468926,4971," Ext.mixin.Observable ",1473919,6582," Ext.Evented ",1480514,12587," Ext.data.proxy.Proxy ",1493123,2337," Ext.data.proxy.Client ",1495483,33864," Ext.AbstractManager ",1696160,32,1529400,8719," Ext.data.proxy.Proxy ",1538141,24524," Ext.data.proxy.Server ",1562688,28544,1573341,33," ",1810367,36,1591302,15052,1573341,33," ",1810367,36,1606424,15005,1573341,33," ",1810367,36,1621499,10230," Ext.util.Collection ",1562688,34,412750,37,1631821,9120," Ext.mixin.Observable ",627340,34,1640997,55142," Ext.util.Collection ",1696160,4118," Ext.util.Sorter ",1700295,13802," Ext.Evented ",1480608,49,"\n    ",2142470,84,142384,33,"\n",863541,51,1714333,77433," Ext.data.Store ",1791782,2864," Ext.mixin.Observable ",1794668,15678," Ext.data.proxy.Ajax ",1810367,2236,"Ext.define('Helpdesk.override.data.proxy.Rest', {\n    override: 'Ext.data.proxy.Rest',\n    ",1811675,50,"= this,\n            baseUrl = Helpdesk.app.baseUrl",1551618,40,"        \n        // Prefix the application's base URL (where the web services reside), \n        // rather than hard-coding the full URL on each store's proxy.\n        url = baseUrl + url;\n        ",1812520,1281," Ext.data.reader.Json ",1813823,1400," Ext.mixin.Mixin ",567710,35,1815275,19081," Ext.Container ",1834371,3758," Ext.Container ",1838144,8980," Ext.Component ,",1838846,33,"start",1848368,35,1861792,35,1847248,14054," Ext.Container ",1017370,32,"DataView',\n\n    mixins: [ Ext.mixin.Selectable ",1861396,31128," Ext.Component ",1892539,4002," Ext.Component ",1896556,3044," Ext.dataview.component.DataItem ",1899633,3444," Ext.Component ",1903092,9731," Ext.dataview.DataView ",1912846,35," Ext.mixin.Bindable ",1480607,45,142384,33,142384,37,1838160,44,1641360,43,1861456,38,706428,32,1913173,58609,1972258,32," ",1971049,40,1971855,526," Ext.mixin.Observable ",1972403,4368," Ext.device.device.Abstract ",1976799,3696," Ext.device.device.Abstract ",492431,46,1980569,824," Ext.device.device.Abstract ",1981421,6739," ",1991993,32," ",1791808,38,1988232,2139," ",1991993,32," ",1791808,38,1990443,1549," ",1991993,32," ",1791808,38,1992064,9175," Ext.device.push.Abstract ,\n\n    regist",2151472,43,2022031,32,2259195,32,2001385,459," Ext.device.push.Abstract ",2001870,6091," Ext.event.Event ",2007978,3848," Ext.event.Dom ",863520,43,1007343,35,2011919,2457," Ext.event.publisher.Publisher ",863520,43,2014450,7363," Ext.event.publisher.Publisher ,",2014486,36,2021881,6147," Ext.event.publisher.Publisher ",2215072,52,2028111,16353," Ext.util.paintmonitor.Abstract ",2044496,391," Ext.util.paintmonitor.Abstract ",2044496,33,2044952,791," Ext.event.publisher.Publisher ",1838144,51,"\n",2014456,49,2057911,32,"painted",2057949,264,2046839,98,2023424,130,2046406,978," Ext.mixin.Mixin ",567710,36,2047437,1506," Ext.mixin.Templatable ",1480607,43,2049009,3019," Ext.util.sizemonitor.Abstract ",2043519,41,2053376,52,2052152,594," Ext.util.sizemonitor.Abstract ",2054623,144,2052921,1463," Ext.util.sizemonitor.Abstract ",693232,52,2054467,3338," Ext.event.publisher.Publisher ",1480608,49,2057885,1864," Ext.event.publisher.Dom ",863520,44,"\n           ",715792,57,2059887,13343," Ext.mixin.Identifiable ",2073254,681,327952,32," ",2073968,180," Ext.event.recognizer.Touch ",2074176,389," ",2092911,32," ",2092944,38,2074637,2583," ",2092911,32," ",2077254,6244," ",2092911,32," ",2083532,4823," Ext.event.recognizer.Swipe ",2088383,4527," ",2092911,32," ",2092944,46,2092990,1981," Ext.event.recognizer.Touch ",2098783,37,2095036,971," Ext.event.recognizer.MultiTouch ",2098783,54,2096094,2656," Ext.event.recognizer.MultiTouch ",2098783,3496," ",2092911,32," ",2102313,3359," Ext.field.Field ",1217420,36,2105725,8307,"Ext.define('Helpdesk.override.field.Checkbox', {\n    override: 'Ext.field.Checkbox',\n    ",2109199,42,"// Always return a true or false value, rather than 'null' for unchecked",2111161,40,"    ",2114026,602," Ext.dataview.DataView ",2114651,13283," Ext.Sheet ",2127945,14372," Ext.field.Text ",2142333,17417,"A date picker component which shows a Date Picker on the screen. This class extends from {@link Ext.picker.Picker}\n * and {@link Ext.Sheet} so it is a popup.\n *\n * This component has no required configurations",2125740,68,"datePicker = Ext.create('Ext.picker.Date');\n *     Ext.Viewport.add(datePicker);\n *     datePicker.show();\n *\n * You may want to adjust the {@link #yearFrom} and {@link #yearTo} properties",1076528,46,"var datePicker = Ext.create('Ext.picker.Date', {\n *         yearFrom: 2000,\n *         yearTo  : 2015",2126252,36,"datePicker);\n *     datePicker.show();\n *\n * You can set the value of the {@link Ext.picker.Date} to the current date using `new Date()`",1076528,46,"var datePicker = Ext.create('Ext.picker.Date', {\n *         value: new Date()",2126252,36,"datePicker);\n *     datePicker.show();\n *\n * And you can hide the titles from each of the slots by using the {@link #useTitle",1074828,46," preview\n *     var datePicker = Ext.create('Ext.picker.Date', {\n *         useTitles: false",2126252,36,"datePicker);\n *     dateP",2127870,41,"Date', {\n    extend:  Ext.picker.Picker ,\n    xtype: 'date",2127967,38,"DatePick",1167358,37,1992053,33,1295551,35,2128468,44,"and the done button is",2128536,36,"Date} this This Picker\n     * @param {Date} value The date valu",1865838,53,"{Number} yearFrom\n         * The start year for the date picker. If {@link #yearFrom} is greater than\n         * {@link #yearTo} then the order of years will be rever",1408304,46,"yearFrom: 198",939744,41,"[yearTo=new Date().getFullYear()]\n         * The last year for the date picker. If {@link #yearFrom} is greater than\n         * {@link #yearTo} then the order of years will be rever",1408304,46,"yearTo: new Date().getFullYear()",1081904,40,"monthText\n         * The label to show for the month colum",1082608,44,"monthText: 'Month",2116432,41,"dayText\n         * The label to show for the day colum",1082608,44,"dayText: 'Day",2116432,41,"yearText\n         * The label to show for the year colum",1082608,44,"yearText: 'Yea",2129007,34,"Array} slotOrder\n         * An array of strings that specifies the order of the slot",1219616,44,"slotOrder: ['month', 'day', 'year'",1333776,33,"Object/Date} value\n         * Default value for the field and the internal {@link Ext.picker.Date} component. Accepts an object of 'year',\n         * 'month' and 'day' values, all of which should be numbers, or a {@link Date}.\n         *\n         * Examples:\n         *\n         * - `{year: 1989, day: 1, month: 5}` = 1st May 1989\n         * - `new Date()` = current d",1182910,37,1332816,37,"slots",2145437,51,1325856,37,2129048,274,2132605,68,2132889,100,2133368,47,1894747,33,2120335,42,"delegate: '> slot',\n            slotpick: this.onSlotPick",2304165,44,"scope: this,\n            show: this.onSlotPick\n        });",1193122,32,"value, animated) {",1502706,46,"value = {\n                day  : value.getDate(),\n                month: value.getMonth() + 1,\n                year : value.getFullYear(",441103,36,"this.callParent([value, animated]);\n        this.onSlotPick",694046,35,2140703,121,"daysInMonth, day, month, year,",1048591,95," instanceof Ext.picker.Slot) {\n",2140975,76,"}\n        }\n\n        //if all the slots return null, we should not return a date\n        if (values.year === null && values.month === null && values.day",1804270,32,"null;\n        }\n\n        year = Ext.isNumber(values.year) ? values.year : 1;\n        month = Ext.isNumber(values.month) ? values.month : 1;\n        day = Ext.isNumber(values.day) ? values.day : 1;\n\n        if (month && year && month && day) {\n            daysInMonth = this.getDaysInMonth(month, year);\n        }\n        day = (daysInMonth) ? Math.min(day, daysInMonth): day;\n\n        return new Date(year, month - 1, day",1191983,38,"yearFrom",1191129,33,"YearFrom",987760,32,752831,32,"createSlots",1671424,38,"pdates the yearTo",1191129,33,"YearTo",987760,32,752831,32,"createSlots",1671424,38,"pdates the monthText",1191129,33,"MonthText: function(newMonthText, oldMonthText",1048893,47,2136679,50,"item, i;\n",2137220,36,"current items and set the title on the correct slice",1046223,45,211296,43,"i",2137046,34,"    if ((typeof item.title == \"string\" && item.title == oldMonthText) || (item.title.html == oldMonthText)) {\n                    item.setTitle(newMonthTex",2229055,46,1223840,43,"dayText",1191813,35,"DayText: function(newDayText, oldDayText",1048893,47,2136679,50,"item, i;\n",2137220,36,"current items and set the title on the correct slice",1046223,45,211296,43,"i",2137046,34,"    if ((typeof item.title == \"string\" && item.title == oldDayText) || (item.title.html == oldDayText)) {\n                    item.setTitle(newDayTex",2229055,46,1197376,35,"yearText",1191129,33,"YearText: function(yearText",1048893,47,2136679,50,"item, i;\n",2137220,36,"current items and set the title on the correct slice",1046223,45,211296,43,"i",2137046,34,"    if (item.title == this.yearText) {\n                    item.setTitle(yearTex",2229055,46,1173273,50,1165022,53,"createSlots()",1551215,36,"ll slots for all years specified by this component, and then sets them on the component",2262312,35,"Slots",1613216,37,"= this,\n            slotOrder = me.getSlotOrder(),\n            yearsFrom = me.getYearFrom(),\n            yearsTo   = me.getYearTo(),\n            years     = [],\n            days      = [],\n            months    = [],\n            reverse   = yearsFrom > yearsTo,\n            ln, i, daysInMonth;\n\n        while (yearsFrom) {\n            years.push({\n                text  : yearsFrom,\n                value : yearsFrom",1952384,34,"yearsFrom === yearsTo",1391195,41,"\n",857200,43,"yearsFrom--",261456,39,"yearsFrom",99199,37,"daysInMonth = me.getDaysInMonth(1, new Date().getFullYear());\n\n        for (i = 0; i < daysInMonth; i++) {\n            days.push({\n                text  : i + 1,\n                value : i +",845215,38,"for (i = 0, ln = Ext.Date.monthN",447295,40,"months.push({\n                text  : Ext.Date.monthNames[i],\n                value : i +",845215,38,"var slots = [];\n\n        slotOrder.forE",1011133,34,"slots.push(me.createSlot(item, days, months, years));\n        });\n\n        me.setSlots(slo",1047998,37," slot config for a specified date",2262311,36,"Slot: function(name, days, months, years) {\n",399662,36,"case 'year':\n    ",266223,37,"    name: 'year',\n                    align: 'center',\n                    data: years,\n                    title: this.getYearText(),\n                    flex: 3",1626909,32,"case 'month':\n    ",266223,37,85500,36,2135016,32,"    data: months,\n                    title: this.getMonthText(),\n                    flex: 4",1626909,32,"case 'day':\n    ",266223,37,"    name: 'day',\n                    align: 'center',\n                    data: days,\n                    title: this.getDayText(),\n                    flex: 2\n    ",114928,37,"onSlotPick",2112943,32," = this.getValue(true),\n            slot = this.getDaySlot(),\n            year = value.getFullYear(),\n            month = value.getMonth(),\n            days = [],\n            daysInMonth, i;\n\n        if (!value || !Ext.isDate(value) || !slot",2019167,43,1052159,37,"//get the new days of the month for this new date\n        daysInMonth = this.getDaysInMonth(month + 1, year);\n        for (i = 0; i < daysInMonth; i++) {\n            days.push({\n                text: i + 1,\n                value: i +",845215,38,"// We don't need to update the slot days unless it has changed\n        if (slot.getStore().getCount() == days.length",2019167,43,"slot.getStore().setData(days);\n\n        // Now we have the correct amount of days for the day slot, lets update it\n        var store = slot",2124579,37,"slot",2124620,42,"slot",2124666,70,"(valueField, value.getDate());",2124762,40,"return",2124811,64,"slot",2122272,32,"slot.scrollToItem(item);\n        slot.setValue(slot.getValue(true));\n    },\n\n    getDaySlot",2274252,60,2136679,50,"i, slot;\n\n        if (this.daySlot) {\n            return this.daySlot",1444047,38,"n; i++) {\n            slot = innerItems[i];\n            if (slot.isSlot && slot.getName() == \"day\") {\n                this.daySlot = slot;\n                return slot",1365472,42,"null",2150617,33,"DaysInMonth: function(month, year",623269,80,"        return month == 2 && this.isLeapYear(year) ? 29 : daysInMonth[month-1];\n    },\n\n    // @private\n    isLeapYear: function(year) {",620485,32,620516,36,"= 0 && year)));\n    },\n",2138173,113,",\n            testValue = newValue;\n\n        if (Ext.isDate(newValue)) {\n            testValue = newValue.toDateString()",1502695,35,"oldValue)) {\n            oldValue = oldValue.toDateString();\n        }\n\n        if (test",2138304,159,1204350,38,"This is a specialized field which shows a {@link Ext.picker.Date} when tapped. If it has a predefined value,\n * or a value is selected in the {@link Ext.picker.Date}, it will be displayed like a normal {@link Ext.field.Text}\n * (but not selectable/changable).",1215837,33,"DatePicker', {\n *         label: 'Birthday',\n *         value: new Date()\n *     });\n *\n * {@link Ext.field.DatePicker} fields are very simple to implement, and have no required configurations.\n *\n * ## Examples\n *\n * It can be very useful to set a default {@link #value} configuration on {@link Ext.field.DatePicker} fields. In\n * this example, we set the {@link #value} to be the current date.",1077195,32,"tValue} method to\n * update the value at any time.",2103631,45,2141577,154,1215276,69,"datepicker",2162560,35,"label: 'Birthday",2160592,37,"birthday',\n *                         value: new Date()",2160638,63,1174384,46,721920,38,2104217,140,"setValue",1175102,87,"datePickerField = Ext.ComponentQuery.query('datepickerfield')",1515232,35,"    var randomNumber = function(from, to",1078879,35,"    return ",1171771,50,";",1176160,32,"}",1176156,36,"datePickerField.setValue(",1175152,33,"    month: randomNumber(0, 11)",1427824,37,"day  : randomNumber(0, 28)",1427824,37,"year : randomNumber(1980, 2011)",1176160,32,"}",1174976,82,1080704,86," When you need to retrieve the date from the {@link Ext.field.DatePicker}, you can either use the {@link #getValue} or\n * {@link #getFormattedValue} methods",2005488,40,2141581,150,1215276,69,"datepicker",2162560,35,"label: 'Birthday",2160592,37,"birthday',\n *                         value: new Date()",2160638,63,1174384,46,721920,38,"bottom",1229055,83,"text: 'getValue",1175102,87,"datePickerField = Ext.ComponentQuery.query('datepickerfield')[0];",1176160,32,"Ext.Msg.alert(null, datePickerField.getValue()",1174976,82,1079596,44,2104322,38,"FormattedValue",1175102,87,"datePickerField = Ext.ComponentQuery.query('datepickerfield')[0];",1176160,32,"Ext.Msg.alert(null, datePickerField.getFormattedValue()",1174976,56,1215663,68,"\n */\nExt.define('Ext.field.DatePicker', {\n    extend:  Ext.field.Select ",1217420,36,"DatePicker',\n    xtype: 'datepicker",1205885,49,1325808,39,2128432,36,"s when a date",1865109,32,"field.DatePicker} this\n     * @param {Date} newDate The new date\n     * @param {Date} oldDate The old dat",1865838,33,"ui: 'selec",2116144,34,"Object/Ext.picker.Date} picker\n         * An object that is used when creating the internal {@link Ext.picker.Date} component or a direct instance of {@link Ext.picker.Date",1208432,44,"pick",1336575,40,"Boolean}",2145437,107,"Object/Date} value\n         * Default value for the field and the internal {@link Ext.picker.Date} component. Accepts an object of 'year',\n         * 'month' and 'day' values, all of which should be numbers, or a {@link Date}",1470059,32," {year: 1989, day: 1, month: 5} = 1st May 1989 or new Date()",841200,43,1816848,33,"troyPickerOnHide\n         * Whether or not to destroy the picker widget on hide. This save memory if it's not used frequently,\n         * but increase delay time on the next show due to re-instantia",1408926,47,"destroyPickerOnHi",1469792,41,"String} [dateFormat=",644285,33,"] The format to be used when displaying the date in this field.\n         * Accepts any valid date format. You can view formats over in the {@link Ext.Date} documentation",1520935,70,"Object}",1012415,38,2145339,48,2303948,46,2107488,143,2107660,34,2107693,53,2253312,32,2147327,63,2149323,44,1192812,38,"if (!Ext.isDate(value) && !",85156,35,303312,32,85152,39,"return new Date(value.year, value.month - 1, value.day",922397,34,2150048,66,1669297,32,"icker = me._picker;\n\n        if (picker && picker.isPicker) {\n            picker",1222038,40,"// Ext.Date.format expects a Date\n        if (newValue !== null) {\n            me.getComponent().setValue(Ext.Date.format(newValue, me.getDateFormat()",644281,38,676208,35,"getComponent().setValue('');\n        }\n\n        if (newV",545759,33,"me.fireEvent('change', me, newV",546794,39,"/**\n     * Updates the date format in the field",1191472,36,"DateFormat: function(newDateFormat, oldDateFormat) {\n",888620,45,"if (newDateFormat != oldDateFormat && ",1502719,33,"this.getComponent().setValue(Ext.Date.format(value, newDateF",644276,43,764496,48,"{@link Date} value of this field.\n     * If you wanted a formatted date use the {@link #getFormattedValue} method.\n     * @return {Date} The date selected",2140671,32,") {\n        if (this._picker && this._picker instanceof Ext.picker.Date) {\n            return this._picker.getValu",769984,36,"_val",1414512,39,"value of the field formatted using the specified format. If it is not specified, it will default to\n     * {@link #dateFormat} and then {@link Ext.util.Format#defaultDateFormat}",614989,43,"to be",461856,39,"formatted date.\n     */\n    getFormattedValue",599660,33,888632,33,"return (Ext.isDate(value)) ?",644251,34,"this.getDateFormat()",644281,38," : value;\n    },\n\n    applyPicker: function(picker, pickerInstance) {\n        if (pickerInstance && pickerInstance.isPicker) {\n            picker = pickerInstance.setConfig(picker);\n        }\n\n        return picker;\n    },\n\n    get",2150655,33,"picker = this._picke",2121372,38,";\n\n        if (picker && !picker.isPicker) {\n            picker = Ext.factory(picker, Ext.picker.Date);\n            if (value != null) {\n                picker.setValue",2042416,33,"\n        picker",2120334,43,"change: 'onPickerChange',\n            hide  : 'onPickerHide'\n        });\n\n        this._picker = picker;\n\n        return picker",951440,41,"Listener to the tap event of the mask element. Shows the internal DatePicker component when th",2138140,40,"MaskTap",987760,32,1092957,67,"onFocus(",293309,32,2157239,33,"picker changes its value.\n     * @param {Ext.picker.Date} picker The date p",2128591,40,"new value from the date pick",1191470,32,2154476,77,"oldValue = me.getValue();\n\n        me.setValue(value);\n        me.fireEvent('select', me, value);\n        me.onChange(me, value",2155216,36,"Override this or change event will be fired twice. change event is fired in updateValue\n     * for this field. TOUCH-2861\n     */\n    onChang",752027,32,"Destroys the picker when it is hidden, if\n     * {@link Ext.field.DatePicker#destroyPickerOnHide destroyPickerOnHide} is set to `tru",2214748,32,"onPickerHide",1613216,34,"= this,\n            picker = me.getPicker();\n\n        if (me.getDestroyPickerOnHide() && picker) {\n            picker.destroy();\n            me._picker = me.getInitialConfig().picker || true;\n        }",693551,46,1199084,42,"on",1201087,33,1223536,41,1226392,34,2159302,131,"if (this.getReadOnly",1198848,51,2159433,37,"getPicker().sho",2286189,33,302032,34,"picker = this._picker;\n\n        if (picker && picker.isPicker) {\n            pick",972939,33,2324496,33,1204350,38,"The Email field creates an HTML5 email",2159812,65,"n HTML email\n * input field, most browsers will show a specialized virtual keyboard for email address input. Aside from that, the\n * email field is just a normal text",2160009,789,"Email', {\n *         label: 'Email address',\n *         value: 'prefilled@email.com'\n *     });\n *\n * Because email",1217022,38,2160953,59," fields\n *",2161022,110," the\n *",2161139,154,"Email', {\n    extend:  Ext.field.Text ",1217420,36,"Email',\n    xtype: 'emailfield",1606480,45,1230448,44,"component: {\n\t        type: 'email'\n\t",167728,32,1183456,47,"autoCapitalize: false\n    }\n});\n\n\n\n",2141472,35,2159775,1543," Ext.field.Text ,\n",2368380,32,2161368,1990," Ext.Container ",2163373,8948," Ext.Panel ",2172332,42727," Ext.Evented ",2215072,8905," Ext.fx.runner.Css ",1791808,38,2224034,14925," Ext.log.Base ",2238973,3545," Ext.log.Base ",2243109,41,2242573,507," Ext.log.formatter.Formatter ",2243109,353," Ext.log.Base ",1562688,49,2243525,1095," Ext.log.writer.Writer ",2244643,1123," Ext.TitleBar ",863520,40,"\n",863547,34,2245855,19628," Ext.Container ",2265498,15767," Ext.Component ",2281280,13441," Ext.Button ",2294733,2652," Ext.Toolbar ",2294751,34,2297432,5282," Ext.Container ",2302729,7507," Ext.Container ",2310251,33960," Ext.viewport.Default ",2359659,109,2077600,39,2344381,8491," Ext.viewport.Default ",2352894,6549," Ext.viewport.Default ",2359465,4233,"controller/Navigation",2367248,511,"controller.Navigation', {\n    extend:  Ext.app.Controller ,\n\n    config: {\n    }",2371359,588," Ext.app.Controller ",2371967,341,",\n            \"button[action=ShowUserAdm",2372164,32,"UserAdmin",2377936,44,2372334,234,",\n            model = Ext.create('Helpdesk.model.Login', values);\n\n        if (model.isValid()) {\n",2373712,35,2212220,62,"'Logging In",2379591,34,2200789,40,2389712,38,"login',\n    ",2372775,42,2389776,39,2372848,32,2372876,43,2379694,88,"response){\n    ",2373006,89,2390026,51,2373138,36,2373170,35,2379984,65,2373258,82,"    }",2212285,46,"Ext.Msg.alert(\"Invalid Details\", \"Please enter both an email and password to login.\");\n        }",2373353,76,",\n            loginForm = me.getLoginForm();\n\n        Ext.Viewport.hideMenu('right');\n\n        loginForm.reset(",2389421,92,2373520,463,"onUserAdm",2372336,44,"Ext.Viewport.hideMenu('right'",2373968,3591," Ext.app.Controller ",2371967,79,"ticketForm: 'ticketform",2377643,311,",\n            \"formpanel\": {\n                initialize: 'onTicketFormInitialize'",1162400,39,2377979,108,",\n            disabled = record.get('Closed'",2378086,133,",\n            disabled: disable",2378218,887,"onTicketFormInitialize: function(component, eOpts) {\n        if (component.isDisabled()) {\n            var buttons = component.query('button')",604072,35,"button",2380421,34,"buttons[i]",865263,37,2379097,1585,2365275,552," Ext.data.Model ",863520,44,"\n",939298,60,2365948,224,2366203,90,"Login",2367248,511,"model.Login', {\n    extend:  Ext.data.Model ",863520,43,"\n      \n\n    config: {",2365965,56,"EmailAddress",2370684,47,"name: 'Password",2365072,35,"validation",1169840,35,"type: 'presence',\n                field: 'EmailAddress",2370684,47,"type: 'presence',\n                field: 'Password",2384372,32,"});",2363680,570," Ext.data.Model ",863520,44,"\n",939298,60,2365948,73,2364444,716,2365191,90,"User",2367248,511,"model.User', {\n    extend:  Ext.data.Model ",863520,44,"\n",939298,60,2366956,165,2367152,82,2380682,554," Ext.data.Store ",1838144,51,"\n",939301,57,2381333,58,",\n        grouper: {\n            g",1702607,33,"        if (item.get('Closed')",890240,33,"return 'Closed'",631152,54,"'Open",407888,34,",\n",925213,35,2366255,32,2381419,550," Ext.data.Store ",1480608,48,2381302,54,2382087,64,2369052,555," Ext.form.Panel ,\n    alias: 'widget.companyform",2369656,51,2367239,551," Ext.form.Panel ",2367806,105,"\n       ",2370409,121,2385934,72,"10\n",1240175,35,2368123,95,"email",2368400,40,"Email",2368448,34,"EmailAddress',\n                        placeHolder: 'email@example.com",1172368,79,2368392,660,2369707,543," Ext.tab.Panel ",2370265,165,2367935,78,2370530,104,"companyform",2370646,53,2371017,65,2384397,40,2382157,547," Ext.dataview.List ",2382723,153,2367913,53,2382907,58,"grouped: true",2382955,53,",\n            '<div class=\"listDates\">',\n            '    <div>Created on {DateCreated:date(\\'d/m/Y\\')}</div>',\n            '    <tpl if=\"Closed == true\">',\n            '        <div>Closed on {DateClosed:date(\\'d/m/Y\\')}</div>',\n            '    </tpl",2284649,34,2383018,274,1172362,118,"iconCls: 'fa-plus",2368914,34,"New Ticket",1921680,40,"]",2384373,58,"MainView",2367248,516,"MainView', {\n    extend:  Ext.navigation.View ",2384097,112," \n       ",2370409,78,2384244,153,2269484,39,"docked: 'top',\n",2368143,37,"{\n",1171291,57,2135016,32,"    itemId: 'mybutton6',\n",2368874,33,"bars",1210432,43,2371082,68,"6",2371151,72,"6",2371224,48,"6",2373374,42,"Ext.Viewport.toggleMenu('right');",2384397,587," Ext.form.Panel ",2385000,203,2310368,61,2367935,78,1172112,35,"bottom",2386859,82,1170832,33,2385437,2611,2364464,32,2385926,80,"40\n",1240175,35,"title: 'Statu",2387818,83,"datepicker",2368400,40,"Date Create",2368447,35,"DateCreated',\n                        readOnly: true",1240170,44,1171285,34,"checkbox",2368400,40,"Close",2368447,35,"Closed",1172368,79,"datepicker",2368400,40,"Date Close",2368447,35,"DateClosed',\n                        readOnly: true",72000,39,"]",2384373,52,2367248,490,2388576,210," \n",2388768,55,"32.60/ITHelpdesk/",2388838,85,",\n        'Login",2388922,264,",\n        'Navigation",2389185,65,2389292,256,"typeof StatusBar",2245005,32,2389577,65,"HexString('#F8F9F9",2389653,83,2389737,489,"\n       ",644284,34," = 'd/m/Y';\n\n        var menu = Ext.create('Ext.Menu', {\n",2368143,37,"{\n                    text: 'User Admin',\n                    action: 'ShowUserAdmin',\n",2368874,33,"users'\n",1240175,35,"{\n",2383395,34,",\n",2383305,58,"iconCls: 'fa-sign-out",1210432,42," });\n\n         Ext.Viewport.setMenu(menu, {\n             side: 'right'\n ",2390214,116,"// TODO: Demonstrate something happening when the app resumes from background",2390321,177,"/override/data/proxy/Rest.js",2390428,70,"/override/field/Checkbox.js",2390428,75]